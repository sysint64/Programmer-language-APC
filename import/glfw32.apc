{*************************************************************************
 * GLFW - An OpenGL library
 * API version: 3.0
 * WWW:         http://www.glfw.org/
 *------------------------------------------------------------------------
 * Copyright (c) 2002-2006 Marcus Geelnard
 * Copyright (c) 2006-2010 Camilla Berglund <elmindreda@elmindreda.org>
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would
 *    be appreciated but is not required.
 *
 * 2. Altered source versions must be plainly marked as such, and must not
 *    be misrepresented as being the original software.
 *
 * 3. This notice may not be removed or altered from any source
 *    distribution.
 *
 *************************************************************************}

var x : int; // FIXME

const
	GLFW_VERSION_MAJOR           = 3;
	GLFW_VERSION_MINOR           = 0;
	GLFW_VERSION_REVISION        = 0;

	GLFW_KEY_SPACE               = 32;
	GLFW_KEY_APOSTROPHE          = 39;  { ' }
	GLFW_KEY_COMMA               = 44;  { , }
	GLFW_KEY_MINUS               = 45;  { - }
	GLFW_KEY_PERIOD              = 46;  { . }
	GLFW_KEY_SLASH               = 47;  { / }
	GLFW_KEY_0                   = 48;
	GLFW_KEY_1                   = 49;
	GLFW_KEY_2                   = 50;
	GLFW_KEY_3                   = 51;
	GLFW_KEY_4                   = 52;
	GLFW_KEY_5                   = 53;
	GLFW_KEY_6                   = 54;
	GLFW_KEY_7                   = 55;
	GLFW_KEY_8                   = 56;
	GLFW_KEY_9                   = 57;
	GLFW_KEY_SEMICOLON           = 59;  { ; }
	GLFW_KEY_EQUAL               = 61;  { = }
	GLFW_KEY_A                   = 65;
	GLFW_KEY_B                   = 66;
	GLFW_KEY_C                   = 67;
	GLFW_KEY_D                   = 68;
	GLFW_KEY_E                   = 69;
	GLFW_KEY_F                   = 70;
	GLFW_KEY_G                   = 71;
	GLFW_KEY_H                   = 72;
	GLFW_KEY_I                   = 73;
	GLFW_KEY_J                   = 74;
	GLFW_KEY_K                   = 75;
	GLFW_KEY_L                   = 76;
	GLFW_KEY_M                   = 77;
	GLFW_KEY_N                   = 78;
	GLFW_KEY_O                   = 79;
	GLFW_KEY_P                   = 80;
	GLFW_KEY_Q                   = 81;
	GLFW_KEY_R                   = 82;
	GLFW_KEY_S                   = 83;
	GLFW_KEY_T                   = 84;
	GLFW_KEY_U                   = 85;
	GLFW_KEY_V                   = 86;
	GLFW_KEY_W                   = 87;
	GLFW_KEY_X                   = 88;
	GLFW_KEY_Y                   = 89;
	GLFW_KEY_Z                   = 90;
	GLFW_KEY_LEFT_BRACKET        = 91;  { [ }
	GLFW_KEY_BACKSLASH           = 92;  { \ }
	GLFW_KEY_RIGHT_BRACKET       = 93;  { ] }
	GLFW_KEY_GRAVE_ACCENT        = 96;  { ` }
	GLFW_KEY_WORLD_1             = 161; { non-US #1 }
	GLFW_KEY_WORLD_2             = 162; { non-US #2 }

	GLFW_KEY_ESCAPE              = 256;
	GLFW_KEY_ENTER               = 257;
	GLFW_KEY_TAB                 = 258;
	GLFW_KEY_BACKSPACE           = 259;
	GLFW_KEY_INSERT              = 260;
	GLFW_KEY_DELETE              = 261;
	GLFW_KEY_RIGHT               = 262;
	GLFW_KEY_LEFT                = 263;
	GLFW_KEY_DOWN                = 264;
	GLFW_KEY_UP                  = 265;
	GLFW_KEY_PAGE_UP             = 266;
	GLFW_KEY_PAGE_DOWN           = 267;
	GLFW_KEY_HOME                = 268;
	GLFW_KEY_END                 = 269;
	GLFW_KEY_CAPS_LOCK           = 280;
	GLFW_KEY_SCROLL_LOCK         = 281;
	GLFW_KEY_NUM_LOCK            = 282;
	GLFW_KEY_PRINT_SCREEN        = 283;
	GLFW_KEY_PAUSE               = 284;
	GLFW_KEY_F1                  = 290;
	GLFW_KEY_F2                  = 291;
	GLFW_KEY_F3                  = 292;
	GLFW_KEY_F4                  = 293;
	GLFW_KEY_F5                  = 294;
	GLFW_KEY_F6                  = 295;
	GLFW_KEY_F7                  = 296;
	GLFW_KEY_F8                  = 297;
	GLFW_KEY_F9                  = 298;
	GLFW_KEY_F10                 = 299;
	GLFW_KEY_F11                 = 300;
	GLFW_KEY_F12                 = 301;
	GLFW_KEY_F13                 = 302;
	GLFW_KEY_F14                 = 303;
	GLFW_KEY_F15                 = 304;
	GLFW_KEY_F16                 = 305;
	GLFW_KEY_F17                 = 306;
	GLFW_KEY_F18                 = 307;
	GLFW_KEY_F19                 = 308;
	GLFW_KEY_F20                 = 309;
	GLFW_KEY_F21                 = 310;
	GLFW_KEY_F22                 = 311;
	GLFW_KEY_F23                 = 312;
	GLFW_KEY_F24                 = 313;
	GLFW_KEY_F25                 = 314;
	GLFW_KEY_KP_0                = 320;
	GLFW_KEY_KP_1                = 321;
	GLFW_KEY_KP_2                = 322;
	GLFW_KEY_KP_3                = 323;
	GLFW_KEY_KP_4                = 324;
	GLFW_KEY_KP_5                = 325;
	GLFW_KEY_KP_6                = 326;
	GLFW_KEY_KP_7                = 327;
	GLFW_KEY_KP_8                = 328;
	GLFW_KEY_KP_9                = 329;
	GLFW_KEY_KP_DECIMAL          = 330;
	GLFW_KEY_KP_DIVIDE           = 331;
	GLFW_KEY_KP_MULTIPLY         = 332;
	GLFW_KEY_KP_SUBTRACT         = 333;
	GLFW_KEY_KP_ADD              = 334;
	GLFW_KEY_KP_ENTER            = 335;
	GLFW_KEY_KP_EQUAL            = 336;
	GLFW_KEY_LEFT_SHIFT          = 340;
	GLFW_KEY_LEFT_CONTROL        = 341;
	GLFW_KEY_LEFT_ALT            = 342;
	GLFW_KEY_LEFT_SUPER          = 343;
	GLFW_KEY_RIGHT_SHIFT         = 344;
	GLFW_KEY_RIGHT_CONTROL       = 345;
	GLFW_KEY_RIGHT_ALT           = 346;
	GLFW_KEY_RIGHT_SUPER         = 347;
	GLFW_KEY_MENU                = 348;
	GLFW_KEY_LAST                = 348;

	GLFW_KEY_ESC                 = 256;
	GLFW_KEY_DEL                 = 261;
	GLFW_KEY_PAGEUP              = 266;
	GLFW_KEY_PAGEDOWN            = 267;
	GLFW_KEY_KP_NUM_LOCK         = 282;
	GLFW_KEY_LCTRL               = 341;
	GLFW_KEY_LSHIFT              = 340;
	GLFW_KEY_LALT                = 342;
	GLFW_KEY_LSUPER              = 343;
	GLFW_KEY_RCTRL               = 345;
	GLFW_KEY_RSHIFT              = 344;
	GLFW_KEY_RALT                = 346;
	GLFW_KEY_RSUPER              = 347;

	GLFW_MOUSE_BUTTON_1          = 0;
	GLFW_MOUSE_BUTTON_2          = 1;
	GLFW_MOUSE_BUTTON_3          = 2;
	GLFW_MOUSE_BUTTON_4          = 3;
	GLFW_MOUSE_BUTTON_5          = 4;
	GLFW_MOUSE_BUTTON_6          = 5;
	GLFW_MOUSE_BUTTON_7          = 6;
	GLFW_MOUSE_BUTTON_8          = 7;
	GLFW_MOUSE_BUTTON_LAST       = 7;
	GLFW_MOUSE_BUTTON_LEFT       = 0;
	GLFW_MOUSE_BUTTON_RIGHT      = 1;
	GLFW_MOUSE_BUTTON_MIDDLE     = 3;

	GLFW_JOYSTICK_1              = 0;
	GLFW_JOYSTICK_2              = 1;
	GLFW_JOYSTICK_3              = 2;
	GLFW_JOYSTICK_4              = 3;
	GLFW_JOYSTICK_5              = 4;
	GLFW_JOYSTICK_6              = 5;
	GLFW_JOYSTICK_7              = 6;
	GLFW_JOYSTICK_8              = 7;
	GLFW_JOYSTICK_9              = 8;
	GLFW_JOYSTICK_10             = 9;
	GLFW_JOYSTICK_11             = 10;
	GLFW_JOYSTICK_12             = 11;
	GLFW_JOYSTICK_13             = 12;
	GLFW_JOYSTICK_14             = 13;
	GLFW_JOYSTICK_15             = 14;
	GLFW_JOYSTICK_16             = 15;
	GLFW_JOYSTICK_LAST           = 15;

	GLFW_NOT_INITIALIZED         = $00070001;
	GLFW_NO_CURRENT_CONTEXT      = $00070002;
	GLFW_INVALID_ENUM            = $00070003;
	GLFW_INVALID_VALUE           = $00070004;
	GLFW_OUT_OF_MEMORY           = $00070005;
	GLFW_API_UNAVAILABLE         = $00070006;
	GLFW_VERSION_UNAVAILABLE     = $00070007;
	GLFW_PLATFORM_ERROR          = $00070008;
	GLFW_FORMAT_UNAVAILABLE      = $00070009;
	GLFW_FOCUSED                 = $00020001;
	GLFW_ICONIFIED               = $00020002;
	GLFW_RESIZABLE               = $00022007;
	GLFW_VISIBLE                 = $00022008;
	GLFW_DECORATED               = $00022009;
	GLFW_CONTEXT_REVISION        = $00020004;
	GLFW_RED_BITS                = $00021000;
	GLFW_GREEN_BITS              = $00021001;
	GLFW_BLUE_BITS               = $00021002;
	GLFW_ALPHA_BITS              = $00021003;
	GLFW_DEPTH_BITS              = $00021004;
	GLFW_STENCIL_BITS            = $00021005;
	GLFW_ACCUM_RED_BITS          = $00021006;
	GLFW_ACCUM_GREEN_BITS        = $00021007;
	GLFW_ACCUM_BLUE_BITS         = $00021008;
	GLFW_ACCUM_ALPHA_BITS        = $00021009;
	GLFW_AUX_BUFFERS             = $0002100A;
	GLFW_STEREO                  = $0002100B;
	GLFW_SAMPLES                 = $0002100C;
	GLFW_SRGB_CAPABLE            = $0002100D;

	GLFW_CLIENT_API              = $00022000;
	GLFW_CONTEXT_VERSION_MAJOR   = $00022001;
	GLFW_CONTEXT_VERSION_MINOR   = $00022002;
	GLFW_CONTEXT_ROBUSTNESS      = $00022003;
	GLFW_OPENGL_FORWARD_COMPAT   = $00022004;
	GLFW_OPENGL_DEBUG_CONTEXT    = $00022005;
	GLFW_OPENGL_PROFILE          = $00022006;

	GLFW_OPENGL_API              = $00000001;
	GLFW_OPENGL_ES_API           = $00000002;

	GLFW_NO_ROBUSTNESS           = $00000000;
	GLFW_NO_RESET_NOTIFICATION   = $00000001;
	GLFW_LOSE_CONTEXT_ON_RESET   = $00000002;

	GLFW_OPENGL_NO_PROFILE       = $00000000;
	GLFW_OPENGL_CORE_PROFILE     = $00000001;
	GLFW_OPENGL_COMPAT_PROFILE   = $00000002;

	GLFW_CURSOR_MODE             = $00030001;
	GLFW_STICKY_KEYS             = $00030002;
	GLFW_STICKY_MOUSE_BUTTONS    = $00030003;

	GLFW_CURSOR_NORMAL           = $00040001;
	GLFW_CURSOR_HIDDEN           = $00040002;
	GLFW_CURSOR_CAPTURED         = $00040003;

	GLFW_PRESENT                 = $00050001;
	GLFW_AXES                    = $00050002;
	GLFW_BUTTONS                 = $00050003;

	GLFW_GAMMA_RAMP_SIZE         = 256;

	GLFW_CONNECTED               = $00061000;
	GLFW_DISCONNECTED            = $00061001;

type
	GLFWmonitor = record tmp : char; end; // FIXME
	GLFWwindow  = record tmp : char; end; // FIXME
	//
	GLFWglproc           = procedure;
	GLFWerrorfun         = procedure (a : Integer; const msg : PChar);
	GLFWwindowposfun     = procedure (wnd : ^GLFWwindow; xpos, ypos : Integer);
	GLFWwindowsizefun    = procedure (wnd : ^GLFWwindow; width, height : Integer);
	GLFWwindowfocusfun   = procedure (wnd : ^GLFWwindow; focused : Integer);
	GLFWwindowiconifyfun = procedure (wnd : ^GLFWwindow; iconified : Integer);
	GLFWwindowclosefun   = procedure (wnd : ^GLFWwindow);
	GLFWwindowrefreshfun = procedure (wnd : ^GLFWwindow);
	GLFWmousebuttonfun   = procedure (wnd : ^GLFWwindow; button, action : Integer);
	GLFWmousebuttonfun   = procedure (wnd : ^GLFWwindow; xpos, ypos : Double);
	GLFWcursorenterfun   = procedure (wnd : ^GLFWwindow; entered : Integer);
	GLFWscrollfun        = procedure (wnd : ^GLFWwindow; xpos, ypos : Double);
	GLFWkeyfun           = procedure (wnd : ^GLFWwindow; key, action : Integer);
	GLFWcharfun          = procedure (wnd : ^GLFWwindow; character : Cardinal);
	GLFWmonitorfun       = procedure (wnd : ^GLFWmonitor; event : Integer);
	GLFWcursorposfun     = procedure (wnd : ^GLFWwindow; xpos, ypos : Double);

	GLFWvidmode = record
    	width     : Integer;
    	height    : Integer;
    	redBits   : Integer;
    	greenBits : Integer;
    	blueBits  : Integer;
	end;

	GLFWgammaramp = record
		Red   : [256 x Word];
		Green : [256 x Word];
		Blue  : [256 x Word];
	end;

	function  glfwInit : Integer; external 'glfw3';
	procedure glfwTerminate; external 'glfw3';
	procedure glfwGetVersion (major, minor, rev : ^Integer); external 'glfw3';
	function  glfwGetVersionString : PChar; external 'glfw3';
	function  glfwSetErrorCallback (cbfun : GLFWerrorfun) : GLFWerrorfun; external 'glfw3';
	function  glfwGetMonitors (count : ^Integer) : ^^GLFWmonitor; external 'glfw3';
	function  glfwGetPrimaryMonitor() : ^GLFWmonitor; external 'glfw3';
	procedure glfwGetMonitorPos (monitor : ^GLFWmonitor; xpos, ypos : ^Integer); external 'glfw3';
	procedure glfwGetMonitorPhysicalSize (monitor : ^GLFWmonitor; width, height : ^Integer); external 'glfw3';
	function  glfwGetMonitorName (monitor : ^GLFWmonitor) : PChar; external 'glfw3';
	function  glfwSetMonitorCallback (cbfun : GLFWmonitorfun) : GLFWmonitorfun; external 'glfw3';
	function  glfwGetVideoModes (monitor : ^GLFWmonitor; count : ^Integer) : ^GLFWvidmode; external 'glfw3';
	function  glfwGetVideoMode (monitor : ^GLFWmonitor) : GLFWvidmode; external 'glfw3';
	procedure glfwSetGamma (monitor : ^GLFWmonitor; gamma : Single); external 'glfw3';
	procedure glfwGetGammaRamp (monitor : ^GLFWmonitor; ramp : ^GLFWgammaramp); external 'glfw3';
	procedure glfwSetGammaRamp (monitor : ^GLFWmonitor; const ramp : ^GLFWgammaramp); external 'glfw3';
	procedure glfwDefaultWindowHints; external 'glfw3';
	procedure glfwWindowHint (target, hint : Integer); external 'glfw3';
	function  glfwCreateWindow (width, height : Integer; const title : PChar; monitor : ^GLFWmonitor; share : ^GLFWwindow) : ^GLFWwindow; external 'glfw3';
	procedure glfwDestroyWindow (window : ^GLFWwindow); external 'glfw3';
	function  glfwWindowShouldClose (window : ^GLFWwindow) : Integer; external 'glfw3';
	procedure glfwSetWindowShouldClose (window : ^GLFWwindow; value : Integer); external 'glfw3';
	procedure glfwSetWindowTitle (window : ^GLFWwindow; const title : PChar); external 'glfw3';
	procedure glfwGetWindowPos (window : ^GLFWwindow; xpos, ypos : ^Integer); external 'glfw3';
	procedure glfwSetWindowPos (window : ^GLFWwindow; xpos, ypos : Integer); external 'glfw3';
	procedure glfwGetWindowSize (window : ^GLFWwindow; width, height : ^Integer); external 'glfw3';
	procedure glfwSetWindowSize (window : ^GLFWwindow; width, height : Integer); external 'glfw3';
	procedure glfwIconifyWindow (window : ^GLFWwindow); external 'glfw3';
	procedure glfwRestoreWindow (window : ^GLFWwindow); external 'glfw3';
	procedure glfwShowWindow (window : ^GLFWwindow); external 'glfw3';
	procedure glfwHideWindow (window : ^GLFWwindow); external 'glfw3';
	function  glfwGetWindowMonitor (window : ^GLFWwindow) : ^GLFWmonitor; external 'glfw3';
	function  glfwGetWindowParam (window : ^GLFWwindow; param : Integer) : Integer; external 'glfw3';
	procedure glfwSetWindowUserPointer (window : ^GLFWwindow; ptr : Pointer); external 'glfw3';
	function  glfwGetWindowUserPointer (window : ^GLFWwindow) : Pointer; external 'glfw3';
	function  glfwSetWindowPosCallback (window : ^GLFWwindow; cbfun : GLFWwindowposfun) : GLFWwindowposfun; external 'glfw3';
	function  glfwSetWindowSizeCallback (window : ^GLFWwindow; cbfun : GLFWwindowsizefun) : GLFWwindowsizefun; external 'glfw3';
	function  glfwSetWindowCloseCallback (window : ^GLFWwindow; cbfun : GLFWwindowclosefun) : GLFWwindowclosefun; external 'glfw3';
	function  glfwSetWindowRefreshCallback (window : ^GLFWwindow; cbfun : GLFWwindowrefreshfun) : GLFWwindowrefreshfun; external 'glfw3';
	function  glfwSetWindowFocusCallback (window : ^GLFWwindow; cbfun : GLFWwindowfocusfun) : GLFWwindowfocusfun; external 'glfw3';
	function  glfwSetWindowIconifyCallback (window : ^GLFWwindow; cbfun : GLFWwindowiconifyfun) : GLFWwindowiconifyfun; external 'glfw3';
	procedure glfwPollEvents; external 'glfw3';
	procedure glfwWaitEvents; external 'glfw3';
	function  glfwGetInputMode (window : ^GLFWwindow; mode : Integer) : Integer; external 'glfw3';
	procedure glfwSetInputMode (window : ^GLFWwindow; mode, value : Integer); external 'glfw3';
	function  glfwGetKey (window : ^GLFWwindow; key : Integer) : Integer; external 'glfw3';
	function  glfwGetMouseButton (window : ^GLFWwindow; button : Integer) : Integer; external 'glfw3';
	procedure glfwGetCursorPos (window : ^GLFWwindow; xpos, ypos : ^Double); external 'glfw3';
	procedure glfwSetCursorPos (window : ^GLFWwindow; xpos, ypos : Double); external 'glfw3';
	function  glfwSetKeyCallback (window : ^GLFWwindow; cbfun : GLFWkeyfun) : GLFWkeyfun; external 'glfw3';
	function  glfwSetCharCallback (window : ^GLFWwindow; cbfun : GLFWcharfun) : GLFWcharfun; external 'glfw3';
	function  glfwSetMouseButtonCallback (window : ^GLFWwindow; cbfun : GLFWmousebuttonfun) : GLFWmousebuttonfun; external 'glfw3';
	function  glfwSetCursorPosCallback (window : ^GLFWwindow; cbfun : GLFWcursorposfun) : GLFWcursorposfun; external 'glfw3';
	function  glfwSetCursorEnterCallback (window : ^GLFWwindow; cbfun : GLFWcursorenterfun) : GLFWcursorenterfun; external 'glfw3';
	function  glfwSetScrollCallback (window : ^GLFWwindow; cbfun : GLFWscrollfun) : GLFWscrollfun; external 'glfw3';
	function  glfwGetJoystickParam (joy, param : Integer) : Integer; external 'glfw3';
	function  glfwGetJoystickAxes (joy : Integer; axes : ^Single; numaxes : Integer) : Integer; external 'glfw3';
	function  glfwGetJoystickButtons (joy : Integer; buttons : PChar; numbuttons : Integer) : Integer; external 'glfw3';
	function  glfwGetJoystickName (joy : Integer) : PChar; external 'glfw3';
	procedure glfwSetClipboardString (window : ^GLFWwindow; const str : PChar); external 'glfw3';
	function  glfwGetClipboardString (window : ^GLFWwindow) : PChar; external 'glfw3';
	function  glfwGetTime : Double; external 'glfw3';
	procedure glfwSetTime (time : Double); external 'glfw3';
	procedure glfwMakeContextCurrent (window : ^GLFWwindow); external 'glfw3';
	function  glfwGetCurrentContext() : ^GLFWwindow; external 'glfw3';
	procedure glfwSwapBuffers (window : ^GLFWwindow); external 'glfw3';
	procedure glfwSwapInterval (interval : Integer); external 'glfw3';
	function  glfwExtensionSupported (const extension : PChar) : Integer; external 'glfw3';
	function  glfwGetProcAddress (const procname : PChar) : GLFWglproc; external 'glfw3';